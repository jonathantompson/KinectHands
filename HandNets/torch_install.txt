**************************************************
Preliminary, install the latest gcc

You will need to install gcc 4.7:

sudo add-apt-repository ppa:ubuntu-toolchain-r/test
sudo apt-get update
sudo apt-get install gcc-4.7
sudo apt-get install g++-4.7 c++-4.7

Then update the default compiler just for the user (not the super user!):

Add the following to ~/.profile or ~/.bash_profile or ~/.bashrc

export PATH=/usr/bin/gcc-4.7:$PATH
export PATH=/usr/bin/g++-4.7:$PATH

--> To test type "g++-4.7 -v" in the console

**************************************************
Some torch prerequisites:

sudo apt-get install cmake libreadline-dev git-core gnuplot libqt4-core libqt4-gui libqt4-dev
sudo apt-get install libpng-dev
sudo apt-get install libjpeg-dev
sudo apt-get install libqt4-core libqt4-gui libqt4-dev

**************************************************
Install blas:

git clone git://github.com/xianyi/OpenBLAS.git
sudo apt-get install gfortran
cd OpenBLAS
make NO_AFFINITY=1 USE_OPENMP=1
sudo make install
cd ../

--> On server, use locate gfortran and find the lib and add it to your .bashrc, ie the line:
export CMAKE_LIBRARY_PATH=/usr/lib/gcc/x86_64-redhat-linux/4.4.4/:$CMAKE_LIBRARY_PATH


**************************************************
Install cuda:

Unfortuantely, we shot ourselves in the foot installing gcc 4.7 --> Cuda is NOT
compatible with it.

**** EDIT: Don't do these anymore
**** sudo apt-get install g++-4.6
**** sudo apt-get install gcc-4.6
**** ln -s /usr/bin/gcc-4.6 /usr/bin/gcc
**** ln -s /usr/bin/g++-4.6 /usr/bin/g++
**** and remove from ~/.profile:
**** #export <gcc/g++ lines to path>

sudo apt-get install linux-headers-$(uname -r)

log out then log back in

https://developer.nvidia.com/cuda-downloads --> Download cuda for ubuntu
cd to directory with cuda_5.0.35_linux_64_ubuntu11.10-1.run

Go to a TTY console by pressing CTRL + ALT + F1 -> If that doesn't work then in the grub
loader, highlight the ubuntu option and press "e".  Then change "quiet splash" to "text".

If x-server is running, type:
"sudo service lightdm stop" OR "sudo service gdm stop" (if you're using an old Ubuntu)

sudo apt-get install freeglut3-dev build-essential libx11-dev libxmu-dev libxi-dev libgl1-mesa-glx libglu1-mesa libglu1-mesa-dev libxmu-dev libxi-dev

Go to directory with: cuda_5.0.35_linux_64_ubuntu11.10-1.run
sudo sh cuda_5.0.35_linux_64_ubuntu11.10-1.run -override compiler
Follow the install instructions and install everything in their default locations

Edit your ~/.profile and addls:
export PATH=/usr/local/cuda-5.0/bin:$PATH
export LD_LIBRARY_PATH=/usr/local/cuda-5.0/lib:/usr/local/cuda-5.0/lib64:$LD_LIBRARY_PATH

Reboot

In a terminal type:

nvcc -V

To make sure the compiler driver works

cd ~/NVIDIA_CUDA-5.0_Samples/1_Utilities/deviceQuery
make

~/NVIDIA_CUDA-5.0_Samples/bin/linux/release/deviceQuery

Make sure everything is as it should be!

cd ~/NVIDIA_CUDA-5.0_Samples/2_Graphics/marchingCubes

This is naughty, but I edited the cuda source to get everything to compile:
sudo emacs marchingCubes_kernel.cu 
Change:

#ifndef _MARCHING_CUBES_KERNEL_CU_
#define _MARCHING_CUBES_KERNEL_CU_

#include <stdio.h>

to:

#ifndef _MARCHING_CUBES_KERNEL_CU_
#define _MARCHING_CUBES_KERNEL_CU_

#undef _GLIBCXX_ATOMIC_BUILTINS
#undef _GLIBCXX_USE_INT128

#include <stdio.h>

Also:

sudo emacs /usr/local/cuda-5.0/include/host_config.h

Comment out line 82:

#error -- unsupported GNU version! gcc 4.7 and up are not supported!

to

// #error -- unsupported GNU version! gcc 4.7 and up are not supported!

make

~/NVIDIA_CUDA-5.0_Samples/bin/linux/release/marchingCubes


**************************************************
Make Torch:

git clone git@github.com:torch/torch7-distro.git
cd torch-distro

export CC=gcc-4.7
export CXX=g++-4.7

sudo apt-get install libreadline-dev cmake git-core gnuplot

mkdir build
cd build

export CMAKE_LIBRARY_PATH=/path/to/OpenBLAS:$CMAKE_LIBRARY_PATH
(for me it was "export CMAKE_LIBRARY_PATH=/home/tompson/Desktop/OpenBLAS/:$CMAKE_LIBRARY_PATH")
(or export CMAKE_LIBRARY_PATH=/home/blackboxcompute/Documents/jonathan/OpenBLAS/:$CMAKE_LIBRARY_PATH)
export CMAKE_LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/4.7/:$CMAKE_LIBRARY_PATH

If you still get:
--   Library gfortran: BLAS_gfortran_LIBRARY-NOTFOUND
in the cmake output then the above didn't work and you need to find the libgfortran.so for your
system and include a path to that in the CMAKE_LIBRARY_PATH variable.

(on the server:
export CMAKE_LIBRARY_PATH=/usr/lib64/:$CMAKE_LIBRARY_PATH
export CMAKE_LIBRARY_PATH=/usr/lib/gcc/x86_64-redhat-linux/4.4.4/:$CMAKE_LIBRARY_PATH)


ccmake ..

TURN ON ROCKS OPTION!  It is not on by default and torch-pkg is no longer supported. (this may have changed).

It wont find the intel library MKL library, but it should find everything else.

make -j5

Now we need to fix the cuda tensor compile bugs, basically we need to add:
#undef _GLIBCXX_ATOMIC_BUILTINS
#undef _GLIBCXX_USE_INT128

To the top of all the .cu files:
torch/extra/cuda/lib/THC/THCTensorRandom.cu

Also add the undef lines to the top of:
sudo emacs /usr/local/cuda/include/cuda.h

You also need to comment out the line 82:
#error -- unsupported GNU version! gcc 4.7 and up are not supported!
to
// #error -- unsupported GNU version! gcc 4.7 and up are not supported!

Then:

sudo make install

**************************************************
Make Torch packages:

sudo torch-rocks install image
sudo torch-rocks install optim
sudo torch-rocks install debugger
sudo apt-get install libzmq-dev
sudo torch-rocks install parallel
sudo torch-rocks install sys
sudo sh -c "export MATLAB_ROOT=/usr/local/MATLAB/R2013b/; torch-rocks install mattorch"

If you want thread support: install SDL2
http://brettchalupa.com/installing-sdl2-on-ubuntu-for-game-development/
sudo torch-rocks install https://raw.github.com/torch/sdl2-ffi/master/rocks/sdl2-scm-1.rockspec
sudo torch-rocks install https://raw.github.com/torch/threads-ffi/master/rocks/threads-scm-1.rockspec

You can query more avaliable packages by:
torch-pkg list





